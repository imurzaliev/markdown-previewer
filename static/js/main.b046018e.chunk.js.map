{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MARKED","require","App","props","state","text","placeholder","handleChange","bind","event","this","setState","target","value","className","id","onChange","dangerouslySetInnerHTML","__html","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGMA,EAASC,EAAQ,IAEjBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAMC,GAER,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBALH,E,gDAOnB,SAAaC,GACXC,KAAKC,SAAS,CACZN,KAAMI,EAAMG,OAAOC,U,oBAGvB,WACE,IAAQR,EAASK,KAAKN,MAAdC,KACR,OACE,qBAAKS,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,0BACEC,GAAG,SACHT,YAAY,yBACZO,MAAOR,EACPW,SAAUN,KAAKH,eAGjB,qBACEQ,GAAG,UACHE,wBAAyB,CAAEC,OAAQlB,EAAOK,e,GA3BpCc,aAmCZb,EAAW,ypCA4CFJ,ICxEAkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b046018e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nconst MARKED = require(\"marked\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: placeholder,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.setState({\n      text: event.target.value,\n    });\n  }\n  render() {\n    const { text } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <textarea\n            id=\"editor\"\n            placeholder=\"Enter your markdown...\"\n            value={text}\n            onChange={this.handleChange}\n          ></textarea>\n\n          <div\n            id=\"preview\"\n            dangerouslySetInnerHTML={{ __html: MARKED(text) }}\n          ></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}